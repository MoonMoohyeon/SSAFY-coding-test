1억번 연산 = 1초 정도 간주

줄바꿈이나, 띄어쓰기 기준으로 알아서 cin은 입력이 끝난다.

getchar()은 버퍼에서 읽어들여도, 버퍼의 문자를 삭제시키지 않는다.

cin은 띄어쓰기나 줄바꿈 까지 읽어들인다. 하지만 저장된 문자열에는 띄어쓰기나 줄바꿈이 들어가지 않는다(버퍼의 줄바꿈, 띄어쓰기는 삭제된다)

 ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); << 을 쓰면, getchar()을 사용할 수 없다. << getchar()입력시 버퍼의 모든 내용이 비워지기 때문이다.

printf(), scanf()가 cin,  cout보다 매우 빠르다. 출력이 많거나 입력이 많은 문제의 경우, cout, cin을 쓰면 시간초과가 난다.

string 클래스와 scanf은 호환되지 않는다.

cin.eof()으로 eof을 판단할 수 있다. << cin함수는 버퍼를 비우지 않지만, '>>' 연산자는 버퍼를 비운다.
_______________________________________________________________________________________________

* 문자열 입력
_______________________________________________________________________________________________________________________
* 띄어쓰기가 있는 문자열 입력
input: 
adsfa sdfa afasdflkjn  afgj;anenrgFA
FA SDF ASDF AWEFEASCL
F AWE AWEFA SZSD FASDF
ASDFASDFG

코드:
int main(){
	while(true){
		cin >> s;
		char c = getchar();
		if(c == EOF)
			break;
	}
	
	cout << s;
	
	return 0;
}
1) char c = getchar()을 이용해서, 문단의 마지막을 확인한다.


______________________________________________________________________________________________________________
Q.  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); 하고 문단 읽어들이는 방법.
<< cin을 띄어쓰기, 줄바꿈 기준으로 읽어들인다. << getchar()을 더이상 사용할 수 없다. << getchar()사용시 모든 버퍼를 비워버리기 때문이다.
<< EOF을 알수 있는 방법은? << cin.eof()를 사용하면 된다. 으로 eof을 판단할 수 있다.

코드:
int main(){
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	int i = 0;
	while(!cin.eof()){
		cin >> str[i];
		cout << str[i] << ' ';
		i++;
	}
	
	return 0;
}
<< string 은 scanf와 호환되지 않는다.
_______________________________________________________________________________________________________________________
* 정수 입력
___________________________________________________________________________________
* 길이가 주어지지 않는 쿼리 입력
while(scanf("%d %d", &a, &b) != EOF){
}
___________________________________________________________________________________
* 한줄 입력
getline(istream &is, string str);을 이용한다
ex) getline(cin, str);

ABC ABCDAB ABCDABCDABDE
ABCDABD